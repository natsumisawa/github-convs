git-crnt-brnch() { git symbolic-ref --short HEAD }

# checkout local
git-ch(){
  # instead \r
  LF=$'\\\x0A'
  TEXT="+ CREATE NEW BRANCH"
  BRANCH=$(git branch -vv | sed '1s/^/'"$TEXT$LF"'/' | grep -v "^*" | fzf +m --prompt="LOCAL_BRANCHES > ")
  if [ $BRANCH  = $TEXT ]; then
    BASE_BRANCH=$(echo "develop\nmaster\n$git-crnt-brnch" | uniq | fzf --prompt="BASE_BRANCH > ")
    echo "\U1F4DD  new branch name?"
    read NEW
    echo "\U1F331 ---------------> checkout $BASE_BRANCH" && git checkout $BASE_BRANCH && \
        echo "\U1F331 ----------------------------> pull $BASE_BRANCH" && git pull origin $BASE_BRANCH && \
	echo "\U1F337 ---------------------------------------> checkout new branch" && git checkout -b $NEW
  else
    BRANCH_NAME=$(echo $BRANCH | awk '{print $1}')
    echo "\U1F337 ---------------------------------------> checkout & pull" && git checkout $BRANCH_NAME && git pull origin $BRANCH_NAME
  fi
}

# checkout including remote branches
git-ch-remote(){
  echo "\U1F34E git fetch"
  git fetch
  BRANCH=$(git branch -a | grep remotes/origin/SBATS | awk -F/ '{print $3}' | fzf +m --prompt="BRANCHES > ")
  echo "\U1F34E git checkout"
  git checkout -b $BRANCH origin/$BRANCH
}

# add commit
git-ad-cm(){
  LF=$'\\\x0A'
  FILES=$(git status --short | sed '1s/^/ALL .'"$LF"'/' | fzf -m --prompt="SELECT_ADD_FILES (multi:tab) > ")
  echo "\U1F374 ------------------> add"
  git add $(echo $FILES | awk '{print $2}') && echo $FILES && \
    git diff --cached | grep -e '^+' -e '^-' && \
    echo "\U1F4DD commit message? > " && read MSG && \
    echo "\U1F35D ---------------------------------------> commit" && git commit -m $MSG
}

# add commit for hrmos
git-ad-cm-hrmos(){
  LF=$'\\\x0A'
  FILES=$(git status --short | sed '1s/^/ALL .'"$LF"'/' | fzf -m --prompt="SELECT_ADD_FILES (multi:tab) > ")
  git add $(echo $FILES | awk '{print $2}')
  echo "\U1F374 ------------------> add"
  echo $FILES
  JIRA_NO=$(git symbolic-ref --short HEAD | sed -e "s/\(SBATS-[0-9]*\).*/\1/g")
  git diff --cached | grep -e '^+' -e '^-' && \
  echo "\U1F4DD commit message after "$JIRA_NO"? > "
  read MSG
  echo "\U1F35D ---------------------------------------> commit"
  git commit -m $JIRA_NO" "$MSG
}

# pull from base brach
git-pl(){
  LF=$'\\\x0A'
  BASE_BRANCH=$(git --no-pager reflog | awk '$3 == "checkout:"' | grep ".*to $git-crnt-branch.*" | awk '{print $6}' | sed '1s/^/'"$git-crnt-branch$LF"'/' | sort | uniq | fzf --prompt="BASE_BRANCH > ")
  echo "\U1F31F ---------------------------------------> pull origin/"$BASE_BRANCH"..."
  git pull origin $BASE_BRANCH
}

# push
git-psh(){
  BRANCH=$(git branch -vv | grep "*" | awk '{print $2}')
  echo "\U2728 ---------------------------------------> push origin/"$BRANCH"..."
  git push origin $BRANCH
}

# check alias for git
git-alias(){
  cat ~/.zshrc | grep "alias" | grep "git " | awk -F"alias " '{print $2}'
}

# check emoji unicode
emoji-uni(){
  cat emoji-unicode | fzf -m
}
